html {line-height: 0}

body{
  width: 100%;
}

nav {
  display: block;
  height: 30%;
  background: #3f51b5;
  font-size: 50px;
  color: white;
  padding-top:40px;
}

nav > a{

  display: block;
  text-decoration: none;
  text-align: center;
  color: red;
}

nav > a:hover{
  text-decoration: none;
  color:red;
}

#searchIcon{
  z-index: 3000;
  width:100px;
  height:100px;
  position: absolute;
  left:90%;
  top:22%;
}

#searchIcon:hover{
  cursor: pointer;
}


.oneclass{
  font-family: 'Josefin Slab';
  font-size: 35px;
  margin:15px 70px;
}

section > .input-field > input {
  font-family: 'Josefin Slab';
  font-size: 35px;
  height: 60px;
  margin: 2px;
}

.input-field > i{
  position: absolute;
  top:1%;
  right:-3.5%;
}

.input-field > i:hover{
  color: blue;
  cursor: pointer;
}

.input-field > ul{
  z-index:3000;
  position: absolute;
  width: 100%;
  background-color: #808080;
  margin:0px;
}
.searchresult{
  list-style: none;
  font-weight: bold;
  font-family: 'Josefin Slab';
  text-align: center;
  font-size: 35px;
  margin:0px;

}

.searchresult:hover{
  cursor: pointer;
  background: white;
}


section > .input-field > label{
  font-family: 'Josefin Slab';
  clear: both;
  font-size:35px;
}


#one{
  display: none;
}

#two{
  margin:5px;
  padding: 5px;
}

.card-title{
  cursor: pointer;
}

.logo-font{
  font-size: 40px;
}
.full-width{
  width: 100%;
}

.full-height{
  height: 100%;
}

.middle-main {
  width: 75%;
  margin-left: 12.5%;
}

.transparent{
  background-color:white;
}

.h70{
  height: 70px !important;
}

.pad0{
  padding: 0px;
}

.marg0{
  margin: 0px;
}

.sm-left-space{
  margin-left: 10px;
}

.md-left-space{
  margin-left:20px;
}

.small-top-marg{
  margin-top: 5px;
}
.font-dhed{
  font-size: 1.5em;
}

.blue-bg{
  background-color: #f3f9fe !important;
}

.amazing-text {
  text-shadow: 0 1px 0 #ccc,
  0 2px 0 #c9c9c9,
  0 3px 0 #bbb,
  0 4px 0 #b9b9b9,
  0 5px 0 #aaa,
  0 6px 1px rgba(0,0,0,.1),
  0 0 5px rgba(0,0,0,.1),
  0 1px 3px rgba(0,0,0,.3),
  0 3px 5px rgba(0,0,0,.2),
  0 5px 10px rgba(0,0,0,.25),
  0 10px 10px rgba(0,0,0,.2),
  0 20px 20px rgba(0,0,0,.15);
}





footer{
  margin-top:50px;
}



.breadcrumb {
  /*centering*/
  display: inline-block;
  box-shadow: 0 0 15px 1px rgba(0, 0, 0, 0.35);
  overflow: hidden;
  border-radius: 5px;
  /*Lets add the numbers for each link using CSS counters. flag is the name of the counter. to be defined using counter-reset in the parent element of the links*/
  counter-reset: flag;
}

.breadcrumb a {
  font-size: 25px;
  text-align: center;
  text-decoration: none;
  outline: none;
  display: block;
  float: left;
  color: white;
  /*need more margin on the left of links to accomodate the numbers*/
  padding: 0 10px 0 60px;
  background: #666;
  background: linear-gradient(#666, #333);
  position: relative;
}
/*since the first link does not have a triangle before it we can reduce the left padding to make it look consistent with other links*/
.breadcrumb a:first-child {
  padding-left: 46px;
  border-radius: 5px 0 0 5px; /*to match with the parent's radius*/
}
.breadcrumb a:first-child:before {
  left: 14px;
}
.breadcrumb a:last-child {
  border-radius: 0 5px 5px 0; /*this was to prevent glitches on hover*/
  padding-right: 20px;
}

/*hover/active styles*/
.breadcrumb a.active, .breadcrumb a:hover{
  background: #333;
  background: linear-gradient(#333, #000);
}
.breadcrumb a.active:after, .breadcrumb a:hover:after {
  background: #333;
  background: linear-gradient(135deg, #333, #000);
}

/*adding the arrows for the breadcrumbs using rotated pseudo elements*/
.breadcrumb a:after {
  content: '';
  position: absolute;
  top: 0;
  right: -18px; /*half of square's length*/
  /*same dimension as the line-height of .breadcrumb a */
  width: 36px;
  height: 36px;
  /*as you see the rotated square takes a larger height. which makes it tough to position it properly. So we are going to scale it down so that the diagonals become equal to the line-height of the link. We scale it to 70.7% because if square's:
  length = 1; diagonal = (1^2 + 1^2)^0.5 = 1.414 (pythagoras theorem)
  if diagonal required = 1; length = 1/1.414 = 0.707*/
  transform: scale(0.707) rotate(45deg);
  /*we need to prevent the arrows from getting buried under the next link*/
  z-index: 1;
  /*background same as links but the gradient will be rotated to compensate with the transform applied*/
  background: #666;
  background: linear-gradient(135deg, #666, #333);
  /*stylish arrow design using box shadow*/
  box-shadow:
          2px -2px 0 2px rgba(0, 0, 0, 0.4),
          3px -3px 0 2px rgba(255, 255, 255, 0.1);
  /*
       5px - for rounded arrows and
       50px - to prevent hover glitches on the border created using shadows*/
  border-radius: 0 5px 0 50px;
}
/*we dont need an arrow after the last link*/
.breadcrumb a:last-child:after {
  content: none;
}
/*we will use the :before element to show numbers*/
.breadcrumb a:before {
  content: counter(flag);
  counter-increment: flag;
  /*some styles now*/
  border-radius: 100%;
  width: 20px;
  height: 20px;
  line-height: 20px;
  margin: 8px 0;
  position: absolute;
  top: 0;
  left: 30px;
  background: #444;
  background: linear-gradient(#444, #222);
  font-weight: bold;
}


.flat a, .flat a:after {
  background: white;
  color: black;
  transition: all 0.5s;
}
.flat a:before {
  background: white;
  box-shadow: 0 0 0 1px #ccc;
}
.flat a:hover, .flat a.active,
.flat a:hover:after, .flat a.active:after{
  background: #9EEB62;
}
